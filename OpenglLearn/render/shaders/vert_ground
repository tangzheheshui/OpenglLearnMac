#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec2 aTexCoord;
layout (location = 2) in vec3 aNormal;

out vec2 TexCoord;
out vec3 Normal;
out vec3 pFragPos;
out vec4 FragPosLightSpace;

uniform mat4 uModel;
uniform mat4 uVP;
uniform mat4 uLightSpaceMatrix;

void main()
{
    gl_Position = uVP * uModel * vec4(aPos, 1.0);
    TexCoord = aTexCoord;
    mat3 pMatNormal = mat3(transpose(inverse(uModel)));
    Normal = normalize(pMatNormal * aNormal);
    pFragPos = (uModel * vec4(aPos, 1.0)).xyz;
    FragPosLightSpace = uLightSpaceMatrix * uModel * vec4(aPos, 1.0);
}
