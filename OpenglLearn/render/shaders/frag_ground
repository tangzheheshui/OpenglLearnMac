#version 330 core
out vec4 FragColor;

in vec2 TexCoord;
in vec4 FragPosLightSpace;

uniform sampler2D uTexture;
uniform sampler2D uTextureShadowMap;

float ShadowCalculation(vec4 fragPosLightSpace)
{
    vec3 projCoords = fragPosLightSpace.xyz / fragPosLightSpace.w;
    projCoords = projCoords * 0.5 + 0.5;
    float currentDepth = projCoords.z;
    float shadow = 0.f;
    
    vec2 texelSize = 1.0 / textureSize(uTextureShadowMap, 0);
    for(int x = -1; x <= 1; ++x)
    {
        for(int y = -1; y <= 1; ++y)
        {
            float pcfDepth = texture(uTextureShadowMap, projCoords.xy + vec2(x, y) * texelSize).r; 
            shadow += currentDepth > pcfDepth ? 1.0 : 0.0;        
        }    
    }
    shadow /= 9.0;
    return shadow;
}

void main()
{
    float shadow = ShadowCalculation(FragPosLightSpace); 
    float dark = 1 - shadow * 0.7;
    FragColor = dark * texture(uTexture, TexCoord);
}
